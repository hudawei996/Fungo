apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.PingerOne'

android {
    compileSdkVersion Integer.valueOf(rootProject.getBuildProperty()["compileSdkVersion"])

    defaultConfig {
        minSdkVersion Integer.valueOf(rootProject.getBuildProperty()["minSdkVersion"])
        targetSdkVersion Integer.valueOf(rootProject.getBuildProperty()["targetSdkVersion"])
        versionCode Integer.valueOf(rootProject.getBuildProperty()["baseUiLibVersionCode"])
        versionName rootProject.getBuildProperty()["baseUiLibVersionName"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // 官方api
    api rootProject.getDependenceProperty()['appcompat']
    api rootProject.getDependenceProperty()['material']
    api rootProject.getDependenceProperty()['cardview']
    api rootProject.getDependenceProperty()['recyclerview']
    api rootProject.getDependenceProperty()['constraintlayout']

    // kotlin支持
    api rootProject.getDependenceProperty()['kotlin']

    // fragment封装处理
    api rootProject.getDependenceProperty()['fragmentation_core']
    api rootProject.getDependenceProperty()['fragmentation_swipeback']

    // 下拉刷新
    api rootProject.getDependenceProperty()['smartrefresh']
    api rootProject.getDependenceProperty()['smartrefresh_header']

    // 字体图标
    api rootProject.getDependenceProperty()['iconics']
    api rootProject.getDependenceProperty()['material_design_iconic']
}
